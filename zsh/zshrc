# env
export HOMEBREW="/usr/local"
export EDITOR=nvim
export VISUAL="$EDITOR"
export PATH=$HOME/.dotfiles/bin:$PATH
export CXXFLAGS="-I$HOMEBREW/include"
export LDFLAGS="-L$HOMEBREW/lib"
export CUDA_HOME=/usr/local/cuda
export DYLD_LIBRARY_PATH="$CUDA_HOME/lib:$CUDA_HOME:$CUDA_HOME/extras/CUPTI/lib"
export LD_LIBRARY_PATH="$DYLD_LIBRARY_PATH"
export JUMPDIR=~/Projects
# export PAGER=vimpager

# base16
BASE16_SHELL="$HOME/.config/base16-shell/"
[[ -n "$PS1" ]] && [[ -s $BASE16_SHELL/profile_helper.sh ]] && eval "$($BASE16_SHELL/profile_helper.sh)"

# syntax highlighting
if [[ `uname` = "Linux" ]]; then
  source /usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
  source /usr/share/zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh
elif [[ `uname` = "Darwin" ]]; then
  # zsh-syntax-highlighting
  if [[ -f /usr/local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh ]]; then
    source /usr/local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
  fi

  # zsh-autosuggestions
  if [[ -f /usr/local/share/zsh-autosuggestions/zsh-autosuggestions.zsh ]]; then
    source /usr/local/share/zsh-autosuggestions/zsh-autosuggestions.zsh
  fi
fi

# prompt
source $HOME/.dotfiles/zsh/zsh-git-prompt.sh
export PROMPT='%B%~%b$(git_super_status) %F{magenta}%#%F{reset} '

# complete
autoload -U compinit && compinit
autoload -U bashcompinit && bashcompinit

# jump
j() {
  cd "$JUMPDIR/${1:-}"
}
compctl -/ -W "$JUMPDIR" j

# find and replace in directory
replace-in-dir() {
  ag -l "$1" | xargs sed -i '' -e "s/$1/$2/g"
}

if [[ `uname` = "Darwin" ]]; then
  # history
  autoload -U history-search-end
  zle -N history-beginning-search-backward-end history-search-end
  zle -N history-beginning-search-forward-end history-search-end
  bindkey "^[[A" history-beginning-search-backward-end
  bindkey "^[[B" history-beginning-search-forward-end

  # command + left/right
  bindkey "^[a" beginning-of-line
  bindkey "^[e" end-of-line

  # option + left/right
  bindkey "^[^[[C" forward-word
  bindkey "^[^[[D" backward-word

  # option + delete
  bindkey "^[d" backward-kill-word
fi

# aliases
alias vim=nvim
alias v=nvim
alias gs='git status -sb'
alias gcob='git checkout -b'
alias gco='git checkout'
alias gc='git commit -av'
alias gb='git branch'
alias gp='git push'
alias l='exa'

# fzf & ripgrep
if which rg 2>&1 > /dev/null; then
  export FZF_DEFAULT_COMMAND='rg --files --hidden --smart-case --follow --glob "!.git/*"'
  [[ -f "$HOME/.fzf.zsh" ]] && source "$HOME/.fzf.zsh"
fi

# rbenv
if which rbenv 2>&1 > /dev/null; then
  export RUBY_CONFIGURE_OPTS="--with-openssl-dir=$(brew --prefix openssl@1.1)"
  eval "$(rbenv init -)"
fi

# node 14 LTS
if [[ -d "/usr/local/opt/node@14/bin" ]]; then
  export PATH="/usr/local/opt/node@14/bin:$PATH"
  export LDFLAGS="-L/usr/local/opt/node@14/lib"
  export CPPFLAGS="-I/usr/local/opt/node@14/include"
fi

# yarn
export PATH="$HOME/.yarn/bin:$PATH"

# kubectl
if which kubectl 2>&1 > /dev/null; then
  source <(kubectl completion zsh)
fi

# go
if which go 2>&1 > /dev/null; then
  export GOPATH="$HOME/Projects/go"
  export GOBIN="$GOPATH/bin"
  export PATH="$GOBIN:$PATH"
  export GO111MODULE=on
fi

# rustup
if [[ -f "$HOME/.cargo/env" ]]; then source "$HOME/.cargo/env"; fi

# Google Cloud SDK
if [[ -f "/usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.zsh.inc" ]]; then source "/usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.zsh.inc"; fi
if [[ -f "/usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/completion.zsh.inc" ]]; then source "/usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/completion.zsh.inc"; fi

# thefuck
if which thefuck 2>&1 > /dev/null; then eval $(thefuck --alias); fi

# Fastlane
if [[ -d "$HOME/.fastlane/bin" ]]; then export PATH="$HOME/.fastlane/bin:$PATH"; fi

# Android Studio
if [[ -d "$HOME/Library/Android/sdk" ]]; then
  export ANDROID_HOME=$HOME/Library/Android/sdk
  export PATH=$PATH:$ANDROID_HOME/emulator
  export PATH=$PATH:$ANDROID_HOME/tools
  export PATH=$PATH:$ANDROID_HOME/tools/bin
  export PATH=$PATH:$ANDROID_HOME/platform-tools
fi

# fzf
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# mcfly
if which mcfly 2>&1 > /dev/null; then
  eval "$(mcfly init zsh)"
fi

# zoxide
if which zoxide 2>&1 > /dev/null; then
  eval "$(zoxide init zsh --cmd cd)"
fi

# git wip
if which gitupdate 2>&1 > /dev/null; then
  wip() {
    gitupdate .
  }
fi

# Run local zshrc
if [[ -f "$HOME/.zshrc.local" ]]; then . "$HOME/.zshrc.local"; fi
